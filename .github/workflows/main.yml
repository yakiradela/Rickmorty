name: Build and Deploy

on: 
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/v1.23.6/bin/linux/amd64/kubectl"
        chmod +x kubectl
        sudo mv kubectl /usr/local/bin/

    - name: Install eksctl
      run: |
        curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
        sudo mv /tmp/eksctl /usr/local/bin

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2

    - name: Create EKS Cluster
      run: |
        eksctl get cluster --region us-east-2 --name pokemon-cluster ||\
        eksctl create cluster \
          --name pokemon-cluster \
          --region us-east-2 \
          --nodes 2 \
          --node-type t3.mediium \
          --with-oidc \
          --managed \
          --timeout 30m

    - name: Update kubeconfig
      run: |
       aws eks update-kubeconfig --region us-east-2 --name pokemon-cluster
       sed -i 's/client.authentication.k8s.io\/v1alpha1/client.authentication.k8s.io\/v1beta1/g' ~/.kube/config

    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    - name: Build Docker image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/pokemon-api:latest
    
    - name: Deploy to Kubernetes
      run: |
        kubectl apply -f ./rick-and-morty/k8s/deployment,yaml
        kubectl apply -f ./rick-and-morty/k8s/service.yaml
        kubectl apply -f ./rick-and-morty/k8s/ingress.yaml

    - name: Verify deployment
      run: kubectl get pods
      
